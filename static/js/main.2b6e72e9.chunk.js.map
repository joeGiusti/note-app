{"version":3,"sources":["logo.svg","components/Header.js","components/CircleButton.js","components/FloatingMenu.js","components/SpeechButtons.js","components/NoteEdit.js","components/Notes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","children","CircleButton","onClick","additionalClasses","defaultProps","FloatingMenu","containerClasses","SpeechButtons","play","pause","stop","NoteEdit","setTextArea","toSet","document","getElementById","value","useEffect","id","show","closeFunction","onLoad","noteString","saveFunction","testFunction","console","log","Notes","useState","setData","setSetData","noteStringState","setNoteStringState","noteArray","setNoteArray","showNoteEdit","setShowNoteEdit","noteEditKeyState","setNoteEditKeyState","counter","speakTimeout","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","loadSet","onValue","ref","snap","modNoteString","replaceAll","split","createNoteArray","val","editSet","key","speak","textToSpeek","utter","SpeechSynthesisUtterance","text","window","speechSynthesis","next","length","setTimeout","pauseFunction","clearTimeout","setNamesRef","setsData","forEach","childSnap","push","loadSetNames","map","data","newString","set","noteLine","index","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2b6e72e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction CircleButton(props) {\r\n    return (\r\n        <div onClick={props.onClick} className={\"circleButton \"+props.additionalClasses}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nCircleButton.defaultProps={\r\n    onClick:()=>{},\r\n}\r\nexport default CircleButton","import React from 'react'\r\n\r\nfunction FloatingMenu(props) {\r\n    return (\r\n        <div className={\"floatingMenuContainer \"+props.containerClasses}>\r\n            <div className=\"floatingMenu\">\r\n                {props.children}                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FloatingMenu\r\n","import React from 'react'\r\n\r\nfunction SpeechButtons(props) {\r\n    return (\r\n        <div className=\"speechButtonsDivOuter\">\r\n            <div className=\"speechButtonsDiv\">\r\n                <button className=\"button\" onClick={props.play}>\r\n                    Play\r\n                </button>\r\n                <button className=\"button\" onClick={props.pause}>\r\n                    Pause\r\n                </button>\r\n                <button className=\"button\" onClick={props.stop}>\r\n                    Stop\r\n                </button>            \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nSpeechButtons.defaultProps={\r\n    play:()=>{},\r\n    pause:()=>{},\r\n    stop:()=>{},\r\n}\r\nexport default SpeechButtons\r\n\r\n","import React from 'react'\r\nimport {useEffect} from 'react'\r\n\r\nfunction NoteEdit(props) {    \r\n    function inputChangedHandler (event) {\r\n        const updatedKeyword = event.target.value;\r\n        // May be call for search result\r\n    }\r\n    function setTextArea(toSet){\r\n        document.getElementById(\"ta\").value = toSet\r\n    }\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n    return (\r\n        <div id=\"mainDiv\" className={\"noteEdit \"+(!props.show && \"hidden\")}>\r\n            <button className=\"closeButton\" onClick={props.closeFunction}>x</button>\r\n            <textarea id=\"ta\" onLoad={()=>setTextArea(props.noteString)}>\r\n\r\n            </textarea>\r\n            <div className=\"buttonContainer\">\r\n                <button className=\"button\">Cancel</button>\r\n                <button onClick={()=>setTextArea(props.noteString)} className=\"button\">Load</button>\r\n                <button onClick={()=>props.saveFunction(document.getElementById(\"ta\").value)} className=\"button\">Save</button>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nNoteEdit.defaultProps = {\r\n    closeFunction:()=>{},\r\n    testFunction:()=>{console.log(\"no test functio sent\")}\r\n}\r\n\r\nexport default NoteEdit\r\n","import React from 'react'\r\nimport {useState} from 'react'\r\nimport {useEffect} from 'react'\r\nimport {initializeApp} from 'firebase/app'\r\nimport {getDatabase, ref, onValue, set} from 'firebase/database'\r\nimport Header from './Header.js'\r\nimport CircleButton from './CircleButton.js'\r\nimport FloatingMenu from './FloatingMenu.js'\r\nimport SpeechButtons from './SpeechButtons.js'\r\nimport NoteEdit from './NoteEdit.js'\r\n\r\nfunction Notes(props) {\r\n    \r\n    /* #region State Variables */        \r\n    const [setData, setSetData] = useState([])    \r\n    const [noteStringState, setNoteStringState] = useState(\"\")\r\n    const [noteArray, setNoteArray] = useState([])\r\n    const [showNoteEdit, setShowNoteEdit] = useState(false)\r\n    const [noteEditKeyState, setNoteEditKeyState] = useState()\r\n    /* #endregion */\r\n\r\n    /* #region Variables */  \r\n    var counter = 0\r\n    var speakTimeout = null\r\n    var pause = false\r\n    var editNoteSnap = null\r\n    var noteEditSnap = null\r\n    var noteEditKey = null\r\n    /* #endregion */\r\n\r\n    /* #region Firebase Init & Initial Load */    \r\n    var app= initializeApp({\r\n        apiKey: \"AIzaSyBDWCKZwSBi_Qp4U0u3D2tKrcIU290IrDE\",\r\n        authDomain: \"defaultproject-c023e.firebaseapp.com\",\r\n        databaseURL: \"https://defaultproject-c023e-default-rtdb.firebaseio.com\",\r\n        projectId: \"defaultproject-c023e\",\r\n        storageBucket: \"defaultproject-c023e.appspot.com\",\r\n        messagingSenderId: \"147977670881\",\r\n        appId: \"1:147977670881:web:fe1532718095f374bbe7a0\",\r\n        measurementId: \"G-VY1DMS0BKY\"\r\n      }), \r\n      db = getDatabase(app)\r\n    useEffect(()=>{\r\n        // Need to put this here to avoid infinite refresh                \r\n        loadSetNames()\r\n    },\r\n    [])\r\n    function loadSetNames(){\r\n        var setNamesRef = ref(db, \"note-app/set-names\")\r\n        onValue(setNamesRef, snap => {\r\n\r\n            var setsData = []\r\n            snap.forEach(childSnap => {\r\n                setsData.push({\r\n                    key:childSnap.key,\r\n                    value:childSnap.val()\r\n                })\r\n\r\n            })\r\n\r\n            setSetData(setsData)\r\n        })\r\n    }\r\n    /* #endregion */\r\n\r\n    /* #region Load Functions */    \r\n    function loadSet(id){\r\n        //setNoteString(\r\n        onValue(ref(db,\"note-app/note-sets/\"+id), snap=>{            \r\n            createNoteArray(snap.val())\r\n            return true\r\n        })\r\n    }  \r\n    function loadSetForEdit(id){\r\n        //setNoteString(\r\n        onValue(ref(db,\"note-app/note-sets/\"+id), snap=>{            \r\n            setNoteStringState(snap.val())\r\n            noteStringVar = snap.val()\r\n            setNoteEditKeyState(id)\r\n            noteEditKey = id                         \r\n        })\r\n    }    \r\n    function createNoteArray(noteString){\r\n        var modNoteString = noteString\r\n        modNoteString.replaceAll(\"=>\",\" arrow \")\r\n        setNoteArray(modNoteString.split(\"\\n\"))\r\n    }\r\n    /* #endregion */\r\n\r\n    /* #region Mod Functions */    \r\n    function newSet(){\r\n        // add in set-names with id that push returns\r\n        // or put it under /set-names/(push id)/set name\r\n        // better second way bc when deleting it will k where it is\r\n        setNoteStringState(\"\")\r\n    }\r\n    function editSet(key){\r\n        //console.log(\"editing set \"+key)\r\n        // load into noteString state\r\n        loadSetForEdit(key)        \r\n        \r\n        // show components that has the note string in it\r\n        setShowNoteEdit(true)\r\n    }\r\n    function saveNoteEdit(newString){\r\n        console.log(\"new string: \"+newString)\r\n        // use editNoteSnap.key and set()   \r\n        set(ref(db, \"note-app/note-sets/\"+noteEditKeyState), newString)        \r\n    }\r\n    function deleteSet(key){\r\n\r\n    }\r\n    function closeEditWindow(){        \r\n        setShowNoteEdit(false)\r\n    }\r\n    /* #endregion */\r\n\r\n    /* #region Speak Functions */  \r\n    function speak(textToSpeek){\r\n        var utter = new SpeechSynthesisUtterance()\r\n        utter.text = textToSpeek\r\n        window.speechSynthesis.speak(utter)\r\n    }\r\n    function test(){\r\n        var utter = new SpeechSynthesisUtterance()\r\n        utter.text = \"test\"\r\n        window.speechSynthesis.speak(utter)\r\n    }\r\n    function startReadingNotes(){\r\n        if(noteArray.length == 0){\r\n            speak(\"loading first note set\")\r\n            loadSet(1)\r\n            return\r\n        }        \r\n        pause = false\r\n        next()\r\n    }\r\n\r\n    function next(){\r\n        \r\n        if(pause)\r\n            return\r\n\r\n        // read current note\r\n        if(counter >= (noteArray.length))\r\n            counter = 0\r\n        speak(noteArray[counter])\r\n\r\n        // increment counter\r\n        counter++\r\n        if(counter >= (noteArray.length))\r\n            counter = 0\r\n\r\n        // call again\r\n        speakTimeout = setTimeout(next, 5000)\r\n    }\r\n    \r\n    function pauseFunction(){\r\n        pause = true        \r\n        clearTimeout(speakTimeout)        \r\n    }\r\n    function stopFunction(){\r\n        pauseFunction()\r\n        counter = 0              \r\n    }\r\n    /* #endregion */\r\n\r\n    var noteStringVar = \"test string\"\r\n    function updateNoteStringVar(newString){\r\n        noteStringVar = newString\r\n    }\r\n    /* #region Name */  \r\n    /* #endregion */\r\n\r\n    // Return JSX\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <CircleButton>\r\n                    <FloatingMenu containerClasses=\" sideMenu\">\r\n                        <div className=\"setNameTitle\">\r\n                                Note Sets\r\n                        </div>\r\n                        <div className=\"setNameDiv\" onClick={()=>newSet()}>+ New Set +</div> \r\n                        {                        \r\n                            setData.map(data=>(\r\n                                <div className=\"setNameDiv\" onClick={()=>loadSet(data.key)} key={data.key}>\r\n                                    {data.value}\r\n                                    <CircleButton \r\n                                        onClick={()=>editSet(data.key)}\r\n                                        additionalClasses=\"circleButtonInline\"\r\n                                    >\r\n\r\n                                    </CircleButton>\r\n                                </div> \r\n                            ))\r\n                        }\r\n                    </FloatingMenu>\r\n                </CircleButton>\r\n                <CircleButton>\r\n                    <FloatingMenu containerClasses=\" floatingMenuRight\"></FloatingMenu>\r\n                </CircleButton>\r\n\r\n            </Header>\r\n            <SpeechButtons \r\n                play={startReadingNotes} \r\n                pause={pauseFunction}\r\n                stop={stopFunction}\r\n            ></SpeechButtons>\r\n            <NoteEdit \r\n                noteString={noteStringState} \r\n                show={showNoteEdit} \r\n                closeFunction={closeEditWindow}                \r\n                saveFunction ={saveNoteEdit}\r\n                testFunction = {test}\r\n            ></NoteEdit>\r\n            {noteArray.length == 0 ? (<div>Load notes from left to begin</div>) : \"\" } \r\n            {noteArray.length == 0 ? props.children : \"\" }                         \r\n            \r\n            <div className=\"noteLineContainer\">\r\n                {noteArray.map((noteLine, index)=>(\r\n                    <div className=\"noteLineDiv\" key={index}>{index+\": \"+noteLine}</div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Notes from './components/Notes.js'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Notes>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </Notes>\n      {/* <Notes></Notes> */}\n      {/* <header className=\"App-header\">\n        \n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}